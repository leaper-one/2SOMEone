syntax = "v1"

info (
	title: 2SOMEone-user
	desc: // TODO: add description
	author: "tymon42"
	email: "tymon42@outlook.com"
)

type sentPhoneCodeReq {
	Phone string `path:"phone"`
}

type sentPhoneCodeResp {
	Code   int32  `json:"code"`
	Msg    string `json:"msg"`
	Msg_id uint64 `json:"msg_id"`
}

type signUpReq {
	Phone      string `json:"phone"`
	Phone_code string `json:"phone_code"`
	Password   string `json:"password"`
	Msg_id     uint64 `json:"msg_id"`
}

type signUpResp {
	Code    int32  `json:"code"`
	Msg     string `json:"msg"`
	User_id int64  `json:"user_id"`
	Token   string `json:"token"`
}

type signInReq {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

type signInResp {
	Code  int32  `json:"code"`
	Msg   string `json:"msg"`
	Token string `json:"token"`
}

type getuseridReq {
	// B站 UID
	Buid uint64 `json:"buid, optional"`
}

type getuseridResp {
	Code    int32  `json:"code"`
	Msg     string `json:"msg"`
	User_id string `json:"user_id"`
}

@server(
	prefix: /user/v1
	group: user
)
service user-api {
	@doc "发送验证码"
	@handler sentPhoneCodeHandler
	get /sent-phone-code/:phone(sentPhoneCodeReq) returns(sentPhoneCodeResp)
	
	@doc "注册"
	@handler signUpHandler
	post /signup(signUpReq) returns(signUpResp)
	
	@doc "登录"
	@handler signInHandler
	post /signin(signInReq) returns(signInResp)
}

type meReq {
	Authorization string `header:"Authorization"`
}
type meResp {
	Code   int32  `json:"code"`
	Msg    string `json:"msg"`
	UserId string `json:"user_id"`
	Name   string `json:"name"`
	Avatar string `json:"avatar"`
	Buid   int64  `json:"buid"`
	Email  string `json:"email"`
	Phone  string `json:"phone"`
}

type setInfoReq {
	Authorization string `header:"Authorization"`
	Name          string `json:"name"`
	Avatar        string `json:"avatar"`
	Buid          string `json:"buid"`
}

type setInfoResp {
	Code int32  `json:"code"`
	Msg  string `json:"msg"`
}

@server(
	prefix: /account/v1
	group: accounts
	jwt: Auth
)
service user-api {
	@doc "获取当前用户信息 jwt"
	@handler getMeHandler
	get /me(meReq) returns(meResp)
	
	@doc "设置用户信息"
	@handler setInfoHandler
	post /setInfo(setInfoReq) returns(setInfoResp)
}

type getUserIdByBuidReq {
	Buid int64 `json:"buid"`
}

type getUserIdByBuidResp {
	Code   int32  `json:"code"`
	Msg    string `json:"msg"`
	UserId string `json:"user_id"`
}

@server(
	prefix: /app/v1
	group: app
)
service user-api {
	@doc "根据 buid 获取 user_id 仅测试用"
	@handler getUserIdByBuidHandler
	get /get-userid-by-buid(getUserIdByBuidReq) returns(getUserIdByBuidResp)
}